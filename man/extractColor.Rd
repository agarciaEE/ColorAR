% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extractColor.R
\name{extractColor}
\alias{extractColor}
\title{Color proportions}
\usage{
extractColor(
  image,
  RGB,
  resampleFactor = NULL,
  crop = F,
  cropOffset = c(0, 0, 0, 0),
  focal = F,
  sigma = 3,
  colOffset = NULL,
  plot = F,
  interpolate = NULL,
  output = c("both", "value", "image")
)
}
\arguments{
\item{image}{RGB raster image}

\item{RGB}{n rows by 3 columns data.frame with target colors to classify. each column must be R, G and B color values, whereas numer of rows will be number of target colors. Default is NULL.}

\item{resampleFactor}{Integer for downsampling used by redRes. Default = NULL}

\item{crop}{Logical whether to crop image}

\item{cropOffset}{Desired image extent}

\item{focal}{Whether to perform Gaussian blurring. Default = FALSE.}

\item{sigma}{Size of sigma for Gaussian blurring. Default = 3.}

\item{colOffset}{Numeric value between 0 and 1. If NULL, colOffset will be estimated. color offset threshold to classify as target color. Default is NULL.}

\item{plot}{Wheather plot classyfied image or not. Default is FALSE.}

\item{interpolate}{Integer. Image interpolation to reduce NA values created by image transformation. Default = NULL.}

\item{output}{type of output desired. If 'value', gives the proportion of the target color relative to the rest of color of the image. If 'image' gives a raster with values from 0 or 1 whether the target color is present in the image.}
}
\value{
The output from \code{\link{print}}
}
\description{
Extract color and compute color proportion
}
\examples{
tree <- ape::rtree(26, tip.label = letters[1:26])
X <- data.frame(trait1 = runif(26, -10, 10), trait2 = runif(26, -25, 25))
plotPhylomorphospace(tree, X)
\dontrun{
plotPhylomorphospace(tree, X, palette = rainbow(6), col.branches = T)
}
}
